// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "kubevault.dev/operator/client/clientset/versioned/typed/engine/v1alpha1"

	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeEngineV1alpha1 struct {
	*testing.Fake
}

func (c *FakeEngineV1alpha1) AWSAccessKeyRequests(namespace string) v1alpha1.AWSAccessKeyRequestInterface {
	return &FakeAWSAccessKeyRequests{c, namespace}
}

func (c *FakeEngineV1alpha1) AWSRoles(namespace string) v1alpha1.AWSRoleInterface {
	return &FakeAWSRoles{c, namespace}
}

func (c *FakeEngineV1alpha1) AzureAccessKeyRequests(namespace string) v1alpha1.AzureAccessKeyRequestInterface {
	return &FakeAzureAccessKeyRequests{c, namespace}
}

func (c *FakeEngineV1alpha1) AzureRoles(namespace string) v1alpha1.AzureRoleInterface {
	return &FakeAzureRoles{c, namespace}
}

func (c *FakeEngineV1alpha1) DatabaseAccessRequests(namespace string) v1alpha1.DatabaseAccessRequestInterface {
	return &FakeDatabaseAccessRequests{c, namespace}
}

func (c *FakeEngineV1alpha1) GCPAccessKeyRequests(namespace string) v1alpha1.GCPAccessKeyRequestInterface {
	return &FakeGCPAccessKeyRequests{c, namespace}
}

func (c *FakeEngineV1alpha1) GCPRoles(namespace string) v1alpha1.GCPRoleInterface {
	return &FakeGCPRoles{c, namespace}
}

func (c *FakeEngineV1alpha1) MongoDBRoles(namespace string) v1alpha1.MongoDBRoleInterface {
	return &FakeMongoDBRoles{c, namespace}
}

func (c *FakeEngineV1alpha1) MySQLRoles(namespace string) v1alpha1.MySQLRoleInterface {
	return &FakeMySQLRoles{c, namespace}
}

func (c *FakeEngineV1alpha1) PostgresRoles(namespace string) v1alpha1.PostgresRoleInterface {
	return &FakePostgresRoles{c, namespace}
}

func (c *FakeEngineV1alpha1) SecretEngines(namespace string) v1alpha1.SecretEngineInterface {
	return &FakeSecretEngines{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeEngineV1alpha1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
