// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubevault.dev/operator/apis/engine/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MongoDBRoleLister helps list MongoDBRoles.
type MongoDBRoleLister interface {
	// List lists all MongoDBRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MongoDBRole, err error)
	// MongoDBRoles returns an object that can list and get MongoDBRoles.
	MongoDBRoles(namespace string) MongoDBRoleNamespaceLister
	MongoDBRoleListerExpansion
}

// mongoDBRoleLister implements the MongoDBRoleLister interface.
type mongoDBRoleLister struct {
	indexer cache.Indexer
}

// NewMongoDBRoleLister returns a new MongoDBRoleLister.
func NewMongoDBRoleLister(indexer cache.Indexer) MongoDBRoleLister {
	return &mongoDBRoleLister{indexer: indexer}
}

// List lists all MongoDBRoles in the indexer.
func (s *mongoDBRoleLister) List(selector labels.Selector) (ret []*v1alpha1.MongoDBRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MongoDBRole))
	})
	return ret, err
}

// MongoDBRoles returns an object that can list and get MongoDBRoles.
func (s *mongoDBRoleLister) MongoDBRoles(namespace string) MongoDBRoleNamespaceLister {
	return mongoDBRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MongoDBRoleNamespaceLister helps list and get MongoDBRoles.
type MongoDBRoleNamespaceLister interface {
	// List lists all MongoDBRoles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MongoDBRole, err error)
	// Get retrieves the MongoDBRole from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MongoDBRole, error)
	MongoDBRoleNamespaceListerExpansion
}

// mongoDBRoleNamespaceLister implements the MongoDBRoleNamespaceLister
// interface.
type mongoDBRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MongoDBRoles in the indexer for a given namespace.
func (s mongoDBRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MongoDBRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MongoDBRole))
	})
	return ret, err
}

// Get retrieves the MongoDBRole from the indexer for a given namespace and name.
func (s mongoDBRoleNamespaceLister) Get(name string) (*v1alpha1.MongoDBRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mongodbrole"), name)
	}
	return obj.(*v1alpha1.MongoDBRole), nil
}
